name: Development Deployment

on:
  push:
    branches:
      - v*

jobs:
  prepare-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:headless

      - name: Create tag
        id: create_tag
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          commit_message=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ $commit_message =~ \[prepare-release\ v([0-9]+\.[0-9]+\.[0-9]+-rc)\] ]]; then
            version=${BASH_REMATCH[1]}
            git tag -a "$version" -m "Version $version"
            git push origin "$version"  # Push the created tag
          else
            echo "Invalid commit message format"
            exit 1
          fi

  deployment:
    needs: prepare-release
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Build
      run: npm run build:prod

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
        aws-region: eu-central-1

    - name: Deploy
      if: success()
      run: aws s3 sync ./dist/testcode s3://thanostestcicd